name: "Security vulnerability scan"

on:
  workflow_call:
    inputs:
      ref:
        description: Branch, tag or SHA to scan.
        type: string
        required: false
        default: ""

permissions:
  contents: read

jobs:
  go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref }}
      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: stable
          check-latest: true
      - name: Create OSV-Scanner config
        run: |
          echo "GoVersionOverride = '${{ steps.setup-go.outputs.go-version }}'" > osv-scanner.toml
      - name: Scan
        run: |
          docker run --rm \
            --volume './go.mod:/go.mod' \
            --volume './osv-scanner.toml:/osv-scanner.toml' \
            ghcr.io/google/osv-scanner \
            --config osv-scanner.toml \
            --lockfile go.mod \
            --format markdown >> ${GITHUB_STEP_SUMMARY}

  node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref }}
      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: "lts/*"
      - name: Create BOM
        working-directory: node
        run: |
          npm install --omit=dev --package-lock-only --no-audit
          npm sbom --omit=dev --package-lock-only --sbom-format cyclonedx > bom.cdx.json
      - name: Scan
        run: |
          docker run --rm \
            --volume './node/bom.cdx.json:/bom.cdx.json' \
            ghcr.io/google/osv-scanner \
            --sbom bom.cdx.json \
            --format markdown >> ${GITHUB_STEP_SUMMARY}

  java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref }}
      - name: Scan
        run: |
          docker run --rm \
            --volume './java/pom.xml:/pom.xml' \
            ghcr.io/google/osv-scanner \
            --lockfile pom.xml \
            --data-source native \
            --format markdown >> ${GITHUB_STEP_SUMMARY}
